@model IList<MemberBulkImportVM>
@using  UserManagement.Domain.ViewModel
@if (Model != null && Model.Count() > 0)
{
    <div class="card datawrapper">
        <div class="card-header visible">
            Data
            <div class="float-right" id="btnErrorControls"></div>
        </div>
        <div class="card-body">
            <form asp-formhelper="true" asp-callback="formValidationCallback" asp-action="ImportData">
                <div asp-validation-summary="All" class="text-danger mb-2"></div>
                <div class="text-center mb-2">
                    <input type="submit" value="Submit" class="btn btn-info" onclick="formValidationCallback();" />
                </div>
                <table class="bulkupload table" id="tblImportData">
                    <thead>
                        <tr>

                            <th>
                                @Html.DisplayNameFor(model => model[0].HFName)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model[0].HFPhone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].HFType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].NIN)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].HFEmail)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].State)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].District)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].City)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Address)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].PIN)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].FirstName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].LastName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserMobile)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Gender)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Qualification)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Experience)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].DRRegNo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserEmail)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Designation)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].DOB)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserState)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserDistrict)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserCity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserAddress)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserPin)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserPrefix)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserAvilableDay)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserAvilableFromTime)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserAvilableToTime)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UserRole)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].AssignedHFType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].AssignHF)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].SubMenuName)
                            </th>

                        </tr>
                    </thead>
                    <tbody>


                        @for (var i = 0; i < Model.Count(); i++)
                        {
                            <tr>

                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].HFName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].HFName, "", new { @class = "text-danger" })
                                </td>

                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].HFPhone, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].HFPhone, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].HFType, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].HFType, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].NIN, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].NIN, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].HFEmail, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].HFEmail, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].StateId)
                                    @Html.TextBoxFor(modelItem => Model[i].State, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].State, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].DistrictId)
                                    @Html.TextBoxFor(modelItem => Model[i].District, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].District, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].CityId)
                                    @Html.TextBoxFor(modelItem => Model[i].City, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].City, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].Address, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].Address, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].PIN, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].PIN, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].FirstName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].FirstName, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].LastName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].LastName, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserMobile, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserMobile, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].Gender, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].Gender, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].Qualification, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].Qualification, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].Experience, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].Experience, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].DRRegNo, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].DRRegNo, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserEmail, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserEmail, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].Designation, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].Designation, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].DOB, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].DOB, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].UserStateId)
                                    @Html.TextBoxFor(modelItem => Model[i].UserState, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserState, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].UserDistrictId)
                                    @Html.TextBoxFor(modelItem => Model[i].UserDistrict, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserDistrict, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].UserCityId)
                                    @Html.TextBoxFor(modelItem => Model[i].UserCity, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserCity, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserAddress, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserAddress, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserPin, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserPin, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserPrefix, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserPrefix, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserAvilableDay, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserAvilableDay, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserAvilableFromTime, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserAvilableFromTime, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserAvilableToTime, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserAvilableToTime, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].UserRole, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].UserRole, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].AssignedHFType, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].AssignedHFType, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].AssignHF, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].AssignHF, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].SubMenuName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(modelItem => Model[i].SubMenuName, "", new { @class = "text-danger" })
                                </td>

                            </tr>
                        }

                    </tbody>
                </table>
            </form>
        </div>
    </div>
}


<script type="text/javascript">

    function formValidationCallback(response, statusText, xhr, $form) {
        setTimeout(function () { setRowBorderColor(); }, 200);
    }
    function setRowBorderColor() {
        var allValidRows = $('#tblImportData tbody tr').not(':has(.field-validation-error)');
        var allInValidRows = $('#tblImportData tbody tr').has('.field-validation-error');
        if (allValidRows) {
            $(allValidRows).removeClass('table-danger');
            $(allValidRows).addClass('table-success');
        }
        if (allInValidRows) {
            $(allInValidRows).removeClass('table-success');
            $(allInValidRows).addClass('table-danger');
        }
    }
    $(document).ready(function () {
        var tableSucess = $('#tblImportData').DataTable({
            "ordering": false,
            "searching": false,
            "paging": true
        });
        setRowBorderColor();
    });
 </script>